#! /usr/bin/nodejs
var async = require('async');
var program = require('commander');
var util = require('util');
var EventEmitter = require('events').EventEmitter;
var init = require('./src/init');
var ContrailSet = require('./src/Set/ContrailSet');
var View = require('./view/view.js');

program
.version('1.0.0')
.usage('[options]')
.option('-d, --discovery <hostname>', 'Discovery address')
.option('-a, --analytics <hostname>', 'Analytics address')
.option('-t, --time-to-refresh <time>', 'Interval to refresh data (in ms)', parseInt)
.parse(process.argv);

init.initFromEnv();
init.initFromOptions(program);
init.checkConfig();
//console.log('global.config -->\n'+util.inspect(config, false, null, true));
var eventEmitter = new EventEmitter();

var init = function(){
  global.contrailSet = new ContrailSet(global.config.discovery, eventEmitter);
  global.view = new View(eventEmitter);
}

//@async
var update = function(callback){
  async.waterfall([
    function(callback){
      global.contrailSet.update(callback);
    },
    function(callback){
      global.view.update(global.contrailSet);
      callback(null);
    }
  ], function(err){
    //console.log('UPDATE');
    callback(null);
  });
}

async.waterfall([
  function(callback){
    init();
    callback(null);
  },
  function(callback){
    update(callback);
  },
  function(callback){
    setInterval(function(){
      update(callback);
    },
    2000);
  }
],function(err, res){
  //console.log(JSON.stringify(global.contrailSet.configSet));
});
